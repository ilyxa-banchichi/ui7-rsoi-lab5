name: Classroom
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  APP_PATH: /home/${{ secrets.SSH_USER_NAME }}/lab2

  ASPNETCORE_ENVIRONMENT: Development
  BUILD_CONFIGURATION: Debug

  GATEWAY_PORT: ${{ vars.GATEWAY_PORT }}
  LIBRARY_PORT: ${{ vars.LIBRARY_PORT }}
  RATING_PORT: ${{ vars.RATING_PORT }}
  RESERVATION_PORT: ${{ vars.RESERVATION_PORT }}

jobs:
  Autograding:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - name: Run containers
        timeout-minutes: 5
        run: |
          docker compose up -d --build
          ./scripts/wait-script.sh
        env:
          WAIT_PORTS: 8080,8070,8060,8050

      - name: Run API Tests
        timeout-minutes: 5
        run: ./scripts/test-script.sh
        env:
          VARIANT: v4
          SERVICE_NAME: rating-service
          PORT_NUMBER: 8050

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v

  Publish:
    needs: Autograding
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker compose build
        docker compose push

  Deploy:
    needs: Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Stop containers
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
            cd ${{ env.APP_PATH }}
            docker compose down --rmi all

    - name: Clear app directory
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
            rm -rf ${{ env.APP_PATH }}
            mkdir -p ${{ env.APP_PATH }}

    - name: Copy docker-compose file
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        source: ./docker-compose.yml
        target: ${{ env.APP_PATH }}

    - name: Copy postgres configs
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        source: ./postgres
        target: ${{ env.APP_PATH }}

    - name: Copy redis configs
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        source: ./redis
        target: ${{ env.APP_PATH }}

    - name: Copy env files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        source: ./env
        target: ${{ env.APP_PATH }}

    - name: Create env
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
            cd ${{ env.APP_PATH }}
            touch .env && echo -e "ASPNETCORE_ENVIRONMENT=${{env.ASPNETCORE_ENVIRONMENT}}\nGATEWAY_PORT=${{ env.GATEWAY_PORT }}\nRATING_PORT=${{ env.RATING_PORT }}\nLIBRARY_PORT=${{ env.LIBRARY_PORT }}\nRESERVATION_PORT=${{ env.RESERVATION_PORT }}\n" > .env

    - name: Start containers
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
            cd ${{ env.APP_PATH }}
            docker compose up -d